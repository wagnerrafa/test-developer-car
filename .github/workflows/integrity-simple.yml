name: Integrity Checks (Simple)

on:
  pull_request:
    branches: [ '**' ]

permissions:
  contents: read
  actions: write

env:
  PYTHON_VERSION: '3.12'
  # Vari치veis de ambiente b치sicas para Django
  DATABASE_URL: 'sqlite:///test.db'
  SECRET_KEY: 'django-insecure-test-key-for-ci-only'
  DEBUG: 'True'
  ALLOWED_HOSTS: 'localhost,127.0.0.1'
  DJANGO_SETTINGS_MODULE: 'config.settings'
  # Vari치veis adicionais necess치rias
  ENVIRONMENT: 'dev'
  ENV: 'dev'
  LIST_ALLOWED_HOSTS: 'localhost,127.0.0.1'
  APP_NAME: 'site_example'


jobs:
  basic-integrity:
    name: Basic Integrity Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry manually
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          poetry install --no-interaction --no-ansi

      - name: Poetry Configuration Check
        run: |
          cd ${{ github.workspace }}
          poetry check

      - name: Check Django configuration (basic)
        run: |
          cd ${{ github.workspace }}
          poetry run python manage.py check --settings=config.settings

      - name: Check for unused imports
        run: |
          cd ${{ github.workspace }}
          poetry run ruff check --select F401 .

      - name: Check for unused variables
        run: |
          cd ${{ github.workspace }}
          poetry run ruff check --select F841 .

      - name: Check for code simplifications
        run: |
          cd ${{ github.workspace }}
          poetry run ruff check --select SIM .

      - name: Check for code upgrades
        run: |
          cd ${{ github.workspace }}
          poetry run ruff check --select UP .

      - name: Check dependency tree
        run: |
          cd ${{ github.workspace }}
          poetry show --tree

      - name: Validate lock file
        run: |
          cd ${{ github.workspace }}
          poetry lock

      - name: Check for circular dependencies
        run: |
          cd ${{ github.workspace }}
          poetry run pipdeptree --warn silence
