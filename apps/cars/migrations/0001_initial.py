# Generated by Django 5.2.6 on 2025-09-22 23:04

import uuid

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="Name")),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Brand",
                "verbose_name_plural": "Brands",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CarModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="Name")),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Model",
                "verbose_name_plural": "Car Models",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CarName",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                ("name", models.CharField(max_length=200, unique=True, verbose_name="Name")),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="car_names",
                        to="cars.brand",
                        verbose_name="Brand",
                    ),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Name",
                "verbose_name_plural": "Car Names",
                "ordering": ("brand__name", "name"),
                "unique_together": {("name", "brand")},
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                ("name", models.CharField(max_length=50, unique=True, verbose_name="Name")),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Color",
                "verbose_name_plural": "Colors",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Engine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="Name")),
                ("displacement", models.CharField(max_length=20, verbose_name="Displacement")),
                (
                    "power",
                    models.IntegerField(
                        help_text="Engine power in horsepower",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Power (HP)",
                    ),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Engine",
                "verbose_name_plural": "Engines",
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation date")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Last update date")),
                ("is_active", models.BooleanField(default=True, editable=False, verbose_name="Is Active")),
                ("description", models.CharField(max_length=150, verbose_name="Description")),
                (
                    "year_manufacture",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(9999),
                            django.core.validators.RegexValidator(
                                message="Year must be exactly 4 digits.", regex="^\\d{4}$"
                            ),
                        ],
                        verbose_name="Year Manufacture",
                    ),
                ),
                (
                    "year_model",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(9999),
                            django.core.validators.RegexValidator(
                                message="Year must be exactly 4 digits.", regex="^\\d{4}$"
                            ),
                        ],
                        verbose_name="Year Model",
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("gasoline", "Gasoline"),
                            ("ethanol", "Ethanol"),
                            ("flex", "Flex"),
                            ("diesel", "Diesel"),
                            ("electric", "Electric"),
                            ("hybrid", "Hybrid"),
                        ],
                        max_length=20,
                        verbose_name="Fuel Type",
                    ),
                ),
                (
                    "mileage",
                    models.IntegerField(
                        help_text="Mileage in kilometers",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Mileage",
                    ),
                ),
                (
                    "doors",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(8),
                        ],
                        verbose_name="Doors",
                    ),
                ),
                (
                    "transmission",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("automatic", "Automatic"),
                            ("cvt", "CVT"),
                            ("semi_automatic", "Semi Automatic"),
                            ("dual_clutch", "Dual Clutch"),
                        ],
                        max_length=20,
                        verbose_name="Transmission",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.01)], verbose_name="Price"
                    ),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cars",
                        to="cars.carmodel",
                        verbose_name="Car Model",
                    ),
                ),
                (
                    "car_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cars",
                        to="cars.carname",
                        verbose_name="Car Name",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cars",
                        to="cars.color",
                        verbose_name="Color",
                    ),
                ),
                (
                    "engine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cars",
                        to="cars.engine",
                        verbose_name="Engine",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car",
                "verbose_name_plural": "Cars",
                "ordering": ("-created_at", "car_model__name"),
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
